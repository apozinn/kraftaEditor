{
    "name": "typeScript",
    "icon_file_name": "typescript",
    "file_patterns": [
        "ts",
        "tsx"
    ],
    "lexer_id": 3,
    "lexer_settings": {
        "tab_width": 2,
        "use_spaces": true
    },
    "syntax": {
        "keyword_lists": {
            "0": "abstract any as boolean break case catch class const constructor continue debugger declare default delete do else enum export extends false finally for from function get if implements import in infer instanceof interface is keyof let module namespace never new null number object of package private protected public readonly require return set static string super switch symbol this throw true try type typeof var void while with yield",
            "1": "Array Promise Date Map Set",
            "2": "interface type extends implements"
        }
    },
    "fold": {
        "enabled": true
    }
}